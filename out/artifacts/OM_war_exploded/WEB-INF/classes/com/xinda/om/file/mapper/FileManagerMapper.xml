<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinda.fm.file.mapper.FileManagerMapper" >
  <resultMap id="BaseResultMap" type="com.xinda.fm.file.dto.FileManagerDto" >
    <id column="FILE_ID" property="fileId" jdbcType="DECIMAL" />
    <result column="FILE_NAME" property="fileName" jdbcType="VARCHAR" />
    <result column="FILE_PATH" property="filePath" jdbcType="VARCHAR" />
    <result column="SALES_ORDER_ID" property="salesOrderId" jdbcType="DECIMAL" />
    <result column="FILE_TYPE" property="fileType" jdbcType="DECIMAL" />
    <result column="FILE_LENGTH" property="fileLength" jdbcType="DECIMAL" />
    <result column="CREATION_DATE" property="creationDate" jdbcType="TIMESTAMP" />
    <result column="LAST_UPDATE_DATE" property="lastUpdateDate" jdbcType="TIMESTAMP" />
    
    <result column="ORDER_NUMBER" property="orderNumber" jdbcType="VARCHAR" />
    
  </resultMap>
  <sql id="Base_Column_List" >
    FILE_ID, FILE_NAME, FILE_PATH, SALES_ORDER_ID, FILE_TYPE, FILE_LENGTH, CREATION_DATE, LAST_UPDATE_DATE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fm_file_info
    where FILE_ID = #{fileId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fm_file_info
    where FILE_ID = #{fileId,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.xinda.fm.file.dto.FileManagerDto" >
    <selectKey resultType="int" keyProperty="fileId" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fm_file_info (FILE_ID, FILE_NAME, FILE_PATH, SALES_ORDER_ID, FILE_TYPE, FILE_LENGTH, CREATION_DATE, LAST_UPDATE_DATE
      )
    values (#{fileId,jdbcType=DECIMAL}, #{fileName,jdbcType=VARCHAR}, #{filePath,jdbcType=VARCHAR}, #{salesOrderId,jdbcType=DECIMAL},
    	#{fileType,jdbcType=VARCHAR}, #{fileLength,jdbcType=DECIMAL}, #{creationDate,jdbcType=TIMESTAMP}, #{lastUpdateDate,jdbcType=TIMESTAMP},
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xinda.fm.file.dto.FileManagerDto" >
    <selectKey resultType="int" keyProperty="fileId" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fm_file_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fileId != null" >
        FILE_ID,
      </if>
      <if test="fileName != null" >
        FILE_NAME,
      </if>
      <if test="filePath != null" >
        FILE_PATH,
      </if>
      <if test="salesOrderId != null" >
        SALES_ORDER_ID,
      </if>
      <if test="fileType != null" >
        FILE_TYPE,
      </if>
      <if test="fileLength != null" >
        FILE_LENGTH,
      </if>
        CREATION_DATE,
        LAST_UPDATE_DATE,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fileId != null" >
        #{fileId,jdbcType=DECIMAL},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="salesOrderId != null" >
        #{salesOrderId,jdbcType=DECIMAL},
      </if>
      <if test="fileType != null" >
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileLength != null" >
        #{fileLength,jdbcType=DECIMAL},
      </if>
      	CURRENT_TIMESTAMP,
        CURRENT_TIMESTAMP,
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinda.fm.file.dto.FileManagerDto" >
    update fm_file_info
    <set >
      <if test="fileName != null" >
        FILE_NAME = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        FILE_PATH = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="salesOrderId != null" >
        SALES_ORDER_ID = #{salesOrderId,jdbcType=DECIMAL},
      </if>
       <if test="fileType != null" >
        FILE_TYPE = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileLength != null" >
        FILE_LENGTH = #{fileLength,jdbcType=DECIMAL},
      </if>
      <if test="creationDate != null" >
      	CREATION_DATE = #{creationDate,jdbcType=TIMESTAMP},
      </if>
        LAST_UPDATE_DATE = CURRENT_TIMESTAMP
    </set>
    where FILE_ID = #{fileId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinda.fm.file.dto.FileManagerDto" >
    update fm_file_info
    set FILE_NAME = #{fileName,jdbcType=VARCHAR},
      FILE_PATH = #{filePath,jdbcType=VARCHAR},
      SALES_ORDER_ID = #{salesOrderId,jdbcType=DECIMAL},
      FILE_TYPE = #{fileType,jdbcType=VARCHAR},
      FILE_LENGTH = #{fileLength,jdbcType=DECIMAL},
      LAST_UPDATE_DATE = CURRENT_TIMESTAMP
    where FILE_ID = #{fileId,jdbcType=DECIMAL}
  </update>
  
  <select id="queryFileOperateByParms" resultMap="BaseResultMap" parameterType="com.xinda.fm.file.dto.FileManagerDto" >
    select 
    	f.FILE_ID,
    	f.FILE_NAME,
    	f.FILE_PATH,
    	f.FILE_TYPE,
    	f.FILE_LENGTH,
    	f.SALES_ORDER_ID,
		o.ORDER_NUMBER
    from fm_file_info f, om_sales_order o
    where f.SALES_ORDER_ID = o.SALES_ORDER_ID
	   	<if test="fileId != null">
	    	AND f.FILE_ID = #{fileId,jdbcType=DECIMAL}
	   	</if>
	   	<if test="fileName != null" >
       		AND UPPER(f.FILE_NAME) LIKE concat('%', concat(UPPER(#{fileName,jdbcType=VARCHAR}), '%'))
     	</if>
     	<if test="filePath != null" >
       		AND f.FILE_PATH = #{filePath,jdbcType=VARCHAR}
     	</if>
     	<if test="salesOrderId != null" >
       		AND f.SALES_ORDER_ID = #{salesOrderId,jdbcType=DECIMAL}
     	</if>
     	<if test="orderNumber != null" >
       		AND UPPER(o.ORDER_NUMBER) LIKE concat('%', concat(UPPER(#{orderNumber,jdbcType=VARCHAR}), '%'))
     	</if>
  </select>
</mapper>